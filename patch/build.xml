<?xml version="1.0" encoding="utf-8" ?>
<project name="StackTracePatch" default="build" basedir=".">
  <property file="build.properties"/>

  <!-- Load the Ant-Contrib tasks; specifically, we will be using the "for" task (see http://ant-contrib.sourceforge.net/tasks/index.html)-->
  <taskdef resource="net/sf/antcontrib/antlib.xml"/>

  <path id="patch.class.path">
    <pathelement location="${src.dir}"/>
    <pathelement location="${gwt.sdk}/gwt-user.jar"/>
    <fileset dir="${gwt.sdk}" includes="gwt-dev*.jar"/>
  </path>

  <path id="tools.class.path">
    <path refid="patch.class.path"/>
    <pathelement location="${tools.dir}"/>
    <pathelement location="${gwt.sdk}/gwt-user.jar"/>
    <pathelement location="C:\Users\Alex\Documents\Projects\TR Commons\out\production\TR Commons"/>
    <fileset dir="${external.libs}/guava-15.0/" includes="*.jar"/>
  </path>

  <target name="extract-gwt-distro" description="Extract the GWT SDK jars that we'll be patching">
    <mkdir dir="${build.gwt-exploded-jars.dir}"/>
    <for param="jar.name" list="${gwt.sdk.jars}">
      <sequential>
        <echo>${gwt.sdk}/@{jar.name}.jar</echo>
        <unjar src="${gwt.sdk}/@{jar.name}.jar" dest="${build.gwt-exploded-jars.dir}/@{jar.name}"/>
      </sequential>
    </for>
  </target>

  <target name="test-scripting" description="TEMP: figuring out how to use the script task">
    <script language="javascript">
      <![CDATA[
          print("gwt.sdk = " + StackTracePatch.getProperty("gwt.sdk"));
          StackTracePatch.setProperty("patch-gwt-distro.js.state", JSON.stringify({fileMap: {a: [1,2,3], b: [4,5,6]}}));
          print("patch-gwt-distro.js.state = " + StackTracePatch.getProperty("patch-gwt-distro.js.state"));
        ]]>
    </script>
    <var name="patch-gwt-distro.js.method" value="printFileMap"/>
    <script language="javascript" src="patch-gwt-distro.js"/>
    <echo message="patch-gwt-distro.js.state = ${patch-gwt-distro.js.state}"/>
    <var name="patch-gwt-distro.js.state" unset="true"/>
  </target>

  <target name="patch-gwt-distro"
          description="Copy our patch files to the exploded GWT jars"
          depends="extract-gwt-distro, javac-tools">
    <!--
    C:\Users\Alex\Documents\Projects\gwt-stack-trace-kit\patch\build\gwt-distro
    C:\Users\Alex\Documents\Projects\gwt-stack-trace-kit\patch\src
    C:\Users\Alex\Documents\Projects\gwt-stack-trace-kit\patch\build\classes
    -->
    <java classname="solutions.trsoftware.gwt.patch.PatchGwtDistro"
          classpathref="tools.class.path"
          fork="true">
      <classpath>
        <!--<pathelement path="${project.class.path}"/>-->
        <pathelement location="${build.dir}/classes"/>
      </classpath>
      <jvmarg value="-Xmx256m"/>
      <jvmarg value="-ea"/>
      <arg value="${build.gwt-exploded-jars.dir}"/>
      <arg value="${src.dir}"/>
      <arg value="${build.dir}/classes"/>
    </java>
    <mkdir dir="${build.gwt-dist.dir}"/>
    <!-- copy the whole GWT SDK to our build dir -->
    <copy todir="${build.gwt-dist.dir}">
      <fileset dir="${gwt.sdk}"/>
    </copy>
    <!-- Jar our staging (exploded) jars to the GWT directory we just copied -->
    <for param="jar.name" list="${gwt.sdk.jars}">
      <sequential>
        <echo>${gwt.sdk}/@{jar.name}.jar</echo>
        <jar basedir="${build.gwt-exploded-jars.dir}/@{jar.name}"
             destfile="${build.gwt-dist.dir}/@{jar.name}.jar"
             update="true"
        />
      </sequential>
    </for>
    <!-- Zip up our patched GWT SDK -->
    <zip destfile="${build.dir}/${gwt.name}-${ant.project.name}.zip" basedir="${build.gwt-dist.dir}"/>
  </target>

  <target name="javac-src" description="Compile src.dir to bytecode">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.dir}/classes"/>
    <javac srcdir="${src.dir}" includes="**" encoding="utf-8"
        destdir="${build.dir}/classes"
        source="1.5" target="1.5" nowarn="true"
        debug="true" debuglevel="lines,vars,source">
      <classpath refid="patch.class.path"/>
    </javac>
  </target>

  <target name="javac-tools" description="Compile tools.dir to bytecode" depends="javac-src">
    <javac srcdir="${tools.dir}" includes="**" encoding="utf-8"
        destdir="${build.dir}/classes"
        source="1.8" target="1.8" nowarn="true"
        debug="true" debuglevel="lines,vars,source">
      <classpath refid="tools.class.path"/>
    </javac>
  </target>

  <target name="clean" description="Deletes the build output">
    <delete dir="${build.dir}" failonerror="false" />
  </target>

  <target name="jar" depends="javac-src"
          description="Builds a JAR file containing the stack trace patch to GWT">
    <tstamp prefix="timestamp"/>
    <jar destfile="${build.dir}/gwt-2.5.0-stacktrace_patch-${timestamp.DSTAMP}_${timestamp.TSTAMP}.jar">
      <!-- Include the patched compiled .class files -->
      <fileset dir="${build.dir}/classes"
               includes="com/google/**"/>
      <!-- Include the new and patched .gwt.xml files from the source directory -->
      <fileset dir="${src.dir}"
               includes="com/google/**/*.gwt.xml"/>
      <!-- Include the source code for files in all client/ packages -->
      <fileset dir="${src.dir}"
               includes="com/google/**/client/**"/>
    </jar>
  </target>

  <target name="build" description="Builds the patch"
      depends="clean,jar,patch-gwt-distro">
  </target>

</project>
